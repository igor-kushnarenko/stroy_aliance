# Generated by Django 3.2.9 on 2021-11-12 05:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=30, verbose_name='Тариф')),
                ('price', models.FloatField(default=0, verbose_name='Стоимость')),
                ('description', models.TextField(default='', verbose_name='Описание тарифа')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_date', models.DateTimeField(verbose_name='Дата резервирования')),
            ],
            options={
                'verbose_name': 'Резервирование',
                'verbose_name_plural': 'Резервирования',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, verbose_name='Сервис')),
            ],
            options={
                'verbose_name': 'Сервис',
                'verbose_name_plural': 'Сервисы',
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.CharField(default='', max_length=50, verbose_name='Время')),
            ],
            options={
                'verbose_name': 'Время',
                'verbose_name_plural': 'Время',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', max_length=30, verbose_name='Имя')),
                ('second_name', models.CharField(default='', max_length=30, verbose_name='Фамилия')),
                ('email', models.EmailField(default='', max_length=30, verbose_name='Электронная почта')),
                ('uuid', models.TextField(default='', verbose_name='uuid')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['second_name'],
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_visit', models.DateField(verbose_name='Дата')),
                ('service', models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='visit', to='board.service', verbose_name='Сервис')),
                ('time', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='visit', to='board.time', verbose_name='Период')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='visit', to='board.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Посещение',
                'verbose_name_plural': 'Посещения',
            },
        ),
        migrations.CreateModel(
            name='Vault',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vault_number', models.IntegerField(default=0, verbose_name='Номер сейфа')),
                ('service', models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='vault', to='board.service', verbose_name='Сервис')),
            ],
            options={
                'verbose_name': 'Сейф',
                'verbose_name_plural': 'Сейфы',
            },
        ),
        migrations.CreateModel(
            name='UserDevices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_firebase_id', models.TextField(default='', verbose_name='device_firebase_id')),
                ('uuid', models.TextField(default='', verbose_name='uuid')),
                ('jwt', models.TextField(default='', verbose_name='jwt')),
                ('jwt_renew', models.TextField(default='', verbose_name='jwt_renew')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='UserDevices', to='board.user', verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.IntegerField(default=0, verbose_name='Номер билета')),
                ('number_persons', models.IntegerField(default=0, verbose_name='Количество персон')),
                ('rate', models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='ticket', to='board.rate', verbose_name='Тариф')),
                ('reservation', models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='ticket', to='board.reservation', verbose_name='Резервирование')),
                ('visit', models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='ticket', to='board.visit', verbose_name='Посещение')),
            ],
            options={
                'verbose_name': 'Билет',
                'verbose_name_plural': 'Билеты',
            },
        ),
        migrations.CreateModel(
            name='Seats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_number', models.IntegerField(default='', verbose_name='Номер шезлонга')),
                ('service', models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='seats', to='board.service', verbose_name='Сервис')),
            ],
            options={
                'verbose_name': 'Шезлонг',
                'verbose_name_plural': 'Шезлонги',
            },
        ),
        migrations.AddField(
            model_name='rate',
            name='service',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='rate', to='board.service', verbose_name='Сервис'),
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='bill', to='board.rate', verbose_name='Тариф')),
                ('ticket', models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='bill', to='board.ticket', verbose_name='Билет')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='bill', to='board.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Счет',
                'verbose_name_plural': 'Счета',
            },
        ),
        migrations.CreateModel(
            name='Auth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(default='', max_length=64, verbose_name='Логин')),
                ('password', models.CharField(default='', max_length=64, verbose_name='Пароль')),
                ('user', models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='auth', to='board.user', verbose_name='Пользователь')),
            ],
        ),
    ]
